"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("../../../util");
const fileSystem_1 = __importDefault(require("../../abstract/fileSystem"));
/**
 * Formats to YYYYMMDDHHmm[.]ssSSS
 */
const formatToTimeFlag = (value) => {
    const date = new Date(value);
    const year = date.getUTCFullYear().toString();
    const month = (date.getUTCMonth() + 1).toString().padStart(2, '0');
    const day = date.getUTCDate().toString().padStart(2, '0');
    const hours = date.getUTCHours().toString().padStart(2, '0');
    const minutes = date.getUTCMinutes().toString().padStart(2, '0');
    const seconds = date.getUTCSeconds().toString().padStart(2, '0');
    const milliseconds = date.getUTCMilliseconds().toString().padStart(3, '0');
    return `${year}${month}${day}${hours}${minutes}.${seconds}${milliseconds}`;
};
class TouchCommand extends fileSystem_1.default {
    constructor() {
        super(...arguments);
        this.rootCmd = 'touch';
        this.argsMapper = {
            aTime: '-a',
            mTime: '-m',
            noCreate: '-c',
            symlink: '-h',
            date: (value) => [
                '-d',
                (0, util_1.escape)(new Date(value).toISOString())
            ],
            time: (value) => [
                '-t',
                (0, util_1.escape)(formatToTimeFlag(value))
            ],
            reference: (value) => ['-r', (0, util_1.escape)(value)]
        };
    }
}
exports.default = TouchCommand;
