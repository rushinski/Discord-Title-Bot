"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("../../util");
const transportParseAll_1 = __importDefault(require("../abstract/transportParseAll"));
const valueParser = (type, value) => {
    switch (type) {
        case 'bool':
        case 'int':
            try {
                return JSON.parse(value);
            }
            catch {
                return value;
            }
        default:
            return value;
    }
};
class ListPropertiesCommand extends transportParseAll_1.default {
    constructor() {
        super(...arguments);
        this.Cmd = 'shell:getprop -T && getprop';
    }
    parse(value) {
        const matches = (0, util_1.findMatches)(value, /^\[([\s\S]*?)\]: \[([\s\S]*?)\]?$/gm);
        const typeMap = new Map(matches.slice(0, matches.length / 2));
        return new Map(matches
            .slice(matches.length / 2)
            .map(([key, value]) => [
            key,
            valueParser(typeMap.get(key), value)
        ]));
    }
}
exports.default = ListPropertiesCommand;
