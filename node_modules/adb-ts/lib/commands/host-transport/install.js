"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("../../util");
const package_1 = __importDefault(require("../abstract/package"));
class InstallCommand extends package_1.default {
    constructor(connection, serial, apk, options, args) {
        super(connection, serial, apk);
        this.Cmd = [
            'shell:pm install',
            ...this.intentArgs(options),
            (0, util_1.escapeCompat)(apk),
            args
        ]
            .filter(Boolean)
            .join(' ');
    }
    throwError(code) {
        throw new Error(`${this.packageOrPath} could not be installed [${code}]`);
    }
    intentArgs(options) {
        const args = [];
        if (!options) {
            return args;
        }
        if (options.reinstall) {
            args.push('-r');
        }
        if (options.test) {
            args.push('-t');
        }
        if (options.internal) {
            args.push('-f');
        }
        if (options.allowDowngrade) {
            args.push('-d');
        }
        if (options.grandPermissions) {
            args.push('-g');
        }
        return args;
    }
}
exports.default = InstallCommand;
