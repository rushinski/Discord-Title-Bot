/// <reference types="node" />
import { Connection } from '../connection';
import { Parser } from '../parser';
export default abstract class Command<T> {
    readonly connection: Connection;
    readonly parser: Parser;
    protected abstract autoEnd: boolean;
    constructor(connection: Connection);
    protected validateReply(reply: string | Buffer): Promise<void>;
    protected readAndValidateReply(): Promise<void>;
    endConnection(): void;
    protected initAndValidateReply(args: string): Promise<void>;
    protected initExecute(args: string): Promise<string>;
    abstract execute(): Promise<T>;
}
