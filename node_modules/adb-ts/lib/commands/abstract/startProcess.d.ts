import { Connection } from '../../connection';
import { StartExtra, ExtraType, StartServiceOptions } from '../../util';
import TransportCommand from './transport';
export default abstract class StartProcess extends TransportCommand<void> {
    protected keepAlive: boolean;
    protected Cmd: string;
    constructor(connection: Connection, serial: string, command: string, pkg: string, process: string, options?: StartServiceOptions);
    protected postExecute(): Promise<void>;
    protected formatExtraType(type: ExtraType): string;
    protected formatExtraObject(extra: StartExtra): string[];
    protected formatExtras(extras?: StartExtra | StartExtra[]): string[];
    protected keyToFlag(k: keyof StartServiceOptions): string;
    protected intentArgs(options: StartServiceOptions): string[];
}
