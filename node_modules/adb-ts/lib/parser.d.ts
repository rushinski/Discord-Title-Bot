/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
import { UnexpectedDataError } from './util';
import { Writable } from 'stream';
import { Socket } from 'net';
export declare class Parser {
    readonly socket: Socket;
    private ended;
    constructor(socket: Socket);
    readBytes(howMany: number): Promise<Buffer>;
    end(): Promise<void>;
    readAscii(howMany: number): Promise<string>;
    readValue(): Promise<Buffer>;
    readError(): Promise<Error>;
    unexpected(data: string, expected: string): UnexpectedDataError;
    readByteFlow(howMany: number, targetStream: Writable): Promise<void>;
    private readUntil;
    private readline;
    searchLine(regExp: RegExp, retry?: boolean): Promise<RegExpExecArray>;
    readAll(): Promise<Buffer>;
}
