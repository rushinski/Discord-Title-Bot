"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileStat = void 0;
const fs_1 = require("fs");
class FileStat extends fs_1.Stats {
    constructor(props) {
        super();
        this.abits = props.abits;
        this.aflags = props.aflags;
        this.atime = props.atime;
        this.atimeMs = props.atimeMs;
        this.blksize = props.blksize;
        this.blocks = props.blocks;
        this.bytes = props.bytes;
        this.ctime = props.ctime;
        this.ctimeMs = props.ctimeMs;
        this.dev = props.dev;
        this.dTypeMajor = props.dTypeMajor;
        this.dTypeMinor = props.dTypeMinor;
        this.ino = props.ino;
        this.gid = props.gid;
        this.gname = props.gname;
        this.mode = props.mode;
        this.moutpoint = props.moutpoint;
        this.mtime = props.mtime;
        this.mtimeMs = props.mtimeMs;
        this.name = props.name;
        this.nlink = props.nlink;
        this.lname = props.lname;
        this.seccon = props.seccon;
        this.size = props.size;
        this.type = props.type;
        this.uid = props.uid;
        this.uname = props.uname;
    }
    isSocket() {
        return /socket/.test(this.type);
    }
    isFIFO() {
        return /fifo/.test(this.type);
    }
    isSymbolicLink() {
        return /link/.test(this.type);
    }
    isCharacterDevice() {
        return /character/.test(this.type);
    }
    isBlockDevice() {
        return /block/.test(this.type);
    }
    isDirectory() {
        return /directory/.test(this.type);
    }
    isFile() {
        return /file/.test(this.type);
    }
}
exports.FileStat = FileStat;
