"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdbExecError = exports.AdbError = exports.NotConnectedError = exports.PrematureEOFError = exports.UnexpectedDataError = void 0;
class UnexpectedDataError extends Error {
    constructor(unexpected, expected) {
        super();
        this.name = 'UnexpectedDataError';
        this.message = `Unexpected '${unexpected}', was expecting ${expected}`;
        this.unexpected = unexpected;
        this.expected = expected;
    }
}
exports.UnexpectedDataError = UnexpectedDataError;
class PrematureEOFError extends Error {
    constructor(howManyMissing) {
        super();
        this.name = 'PrematureEOFError';
        this.message =
            'Premature end of stream, needed ' + howManyMissing + ' more bytes';
        this.missingBytes = howManyMissing;
    }
}
exports.PrematureEOFError = PrematureEOFError;
class NotConnectedError extends Error {
    constructor() {
        super(...arguments);
        this.name = 'NotConnectedError';
        this.message = 'Client not connected. `connect` function must be called before use.';
    }
}
exports.NotConnectedError = NotConnectedError;
class AdbError extends Error {
    constructor(message, errno, code, path) {
        super();
        this.name = 'AdbError';
        this.message = message;
        this.errno = errno;
        this.code = code;
        this.path = path;
    }
}
exports.AdbError = AdbError;
class AdbExecError extends Error {
    constructor(message, cmd) {
        super();
        this.name = 'AdbExecError';
        this.message = message;
        this.command = cmd;
    }
}
exports.AdbExecError = AdbExecError;
